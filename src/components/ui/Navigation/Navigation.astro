---
// Añadir interfaz de Props aunque no tenga propiedades
export interface Props {
  // Añadir slot para mobile-breadcrumb
}

// Definir interfaz para elementos de navegación
interface NavItem {
  label: string;
  href: string;
  icon?: string;
}

// Usar la interfaz para definir los elementos de navegación
const navItems: NavItem[] = [
  { label: "Productos", href: "/productos" },
  { label: "Características", href: "/caracteristicas" },
  { label: "Nosotros", href: "/nosotros" },
  { label: "Contacto", href: "/contacto" },
];

const portfolioItem: NavItem = {
  label: "Portafolio",
  href: "/portafolio",
  icon: "briefcase"
};

// Obtener la ruta actual para resaltar el enlace activo
const currentPath = Astro.url.pathname;
---

<header id="navbar" class="fixed inset-x-0 top-0 z-50 transition-colors duration-300 navbar-scrolled" transition:animate="none">
  <nav aria-label="Global" class="flex items-center justify-between p-6 lg:px-8 h-[72px]">
    <!-- Logo y Links desktop -->
    <div class="flex items-center space-x-6" transition:animate="none">
      <!-- Logo -->
      <div class="flex items-center justify-start" transition:animate="none">
        <a href="/" transition:animate="none">
          <span class="sr-only">MUGA</span>
          <img src="/favicon.svg" alt="" class="h-8 w-8 border border-accent/50 hover:border-accent transition-all duration-500 rounded-full border-dashed" transition:animate="none" />
        </a>
      </div>
      
      <!-- Mobile breadcrumb -->
      <div class="flex lg:hidden ml-4">
        <slot name="mobile-breadcrumb" />
      </div>
      
      <!-- Links desktop -->
      <div class="hidden lg:flex lg:gap-x-2 items-center ml-2" transition:animate="none">
        <a href="/productos" class={`text-sm font-semibold ${currentPath === '/productos' ? 'text-white' : 'text-gray-500 hover:text-gray-300'}`} transition:animate="none">Productos</a>
        <a href="/caracteristicas" class={`text-sm font-semibold ${currentPath === '/caracteristicas' ? 'text-white' : 'text-gray-500 hover:text-gray-300'} ml-4`} transition:animate="none">Características</a>
        <a href="/nosotros" class={`text-sm font-semibold ${currentPath === '/nosotros' ? 'text-white' : 'text-gray-500 hover:text-gray-300'} ml-4`} transition:animate="none">Nosotros</a>
        <a href="/contacto" class={`text-sm font-semibold ${currentPath === '/contacto' ? 'text-white' : 'text-gray-500 hover:text-gray-300'} ml-4`} transition:animate="none">Contacto</a>
      </div>
    </div>

    <!-- Botón menú móvil -->
    <div class="flex lg:hidden" transition:animate="none">
      <button id="mobile-menu-button" class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-200" transition:animate="none">
        <span class="sr-only">Open main menu</span>
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" class="size-6" aria-hidden="true" transition:animate="none">
          <path d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    <div class="hidden lg:flex lg:flex-1 lg:justify-end" transition:animate="none">
      <a href="/portafolio" class={`text-sm font-semibold ${currentPath === '/portafolio' ? 'text-white' : 'text-gray-500 hover:text-gray-300'} flex items-center`} transition:animate="none">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" transition:animate="none">
          <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect>
          <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>
        </svg>
        Portafolio <span aria-hidden="true" class="ml-1" transition:animate="none">&rarr;</span>
      </a>
    </div>
  </nav>

  <!-- Overlay menú mobile -->
  <div id="mobile-menu" class="fixed inset-0 z-50 hidden lg:hidden bg-zinc-900/95 backdrop-blur-lg">
    <div class="fixed inset-y-0 right-0 w-full sm:max-w-sm p-6 overflow-y-auto bg-zinc-900 sm:ring-1 sm:ring-gray-100/10">
      <!-- Header del menú -->
      <div class="flex items-center justify-between">
        <a href="/" class="-m-1.5 p-1.5">
          <span class="sr-only">MUGA</span>
          <img src="/favicon.svg" alt="" class="h-8 w-auto" />
        </a>
        <button id="close-mobile-menu" class="-m-2.5 rounded-md p-2.5 text-gray-200">
          <span class="sr-only">Close menu</span>
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" class="size-6" aria-hidden="true">
            <path d="M6 18 18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <!-- Links -->
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-white/10">
          <div class="space-y-2 py-6">
            <a href="/productos" class="block rounded-lg px-3 py-2 text-base font-semibold text-white hover:bg-white/5">Productos</a>
            <a href="/caracteristicas" class="block rounded-lg px-3 py-2 text-base font-semibold text-white hover:bg-white/5">Características</a>
            <a href="/nosotros" class="block rounded-lg px-3 py-2 text-base font-semibold text-white hover:bg-white/5">Nosotros</a>
            <a href="/contacto" class="block rounded-lg px-3 py-2 text-base font-semibold text-white hover:bg-white/5">Contacto</a>
          </div>
          <div class="py-6">
            <a href="/portafolio" class="flex items-center rounded-lg px-3 py-2.5 text-base font-semibold text-white hover:bg-white/5">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect>
                <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>
              </svg>
              Portafolio
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<style>
  /* Añadir espacio para el header fijo */
  :global(body) {
    padding-top: 112px; /* 72px (navbar) + 40px (breadcrumb) */
  }

  /* Clase para el fondo al hacer scroll */
  .navbar-scrolled {
    background-color: #191717; 
    box-shadow: 0 4px 6px -1px #191717, 0 2px 4px -1px #191717;
  }
</style>

<script is:inline define:vars={{ currentPath }}>
  document.addEventListener('astro:page-load', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeMenuButton = document.getElementById('close-mobile-menu');
    const mobileMenu = document.getElementById('mobile-menu');
    const breadcrumb = document.getElementById('breadcrumb');
    
    // Función para manejar el scroll
    const handleScroll = () => {
      if (window.scrollY > 10) {
        breadcrumb?.classList.add('bg-obscure');
        breadcrumb?.classList.add('shadow-md');
      } else {
        breadcrumb?.classList.remove('shadow-md');
      }
    };
    
    // Agregar evento de scroll
    window.addEventListener('scroll', handleScroll);
    
    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.remove('hidden');
    });
    
    closeMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
    
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
    });
  });

  // Para la carga inicial
  document.addEventListener('DOMContentLoaded', () => {
    if (!document.querySelector('html').hasAttribute('data-astro-transition')) {
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const closeMenuButton = document.getElementById('close-mobile-menu');
      const mobileMenu = document.getElementById('mobile-menu');
      
      mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.remove('hidden');
      });
      
      closeMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
      
      const mobileLinks = mobileMenu?.querySelectorAll('a');
      mobileLinks?.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu?.classList.add('hidden');
        });
      });
    }
  });
</script>


