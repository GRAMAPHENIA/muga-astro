---
interface Props {
  iconPath: string;
  iconAlt: string;
  iconSize?: string;
  blurAmount?: string;
  iconId?: string;
}

const { 
  iconPath, 
  iconAlt, 
  iconSize = "w-40 h-40", 
  blurAmount = "3px",
  iconId
} = Astro.props;
---

<div class="icon-container absolute inset-0 flex items-center justify-center pointer-events-none z-0">
  <img
    src={iconPath}
    class={`icon-with-blur-effect ${iconSize}`}
    alt={iconAlt}
    data-icon-id={iconId}
    style={`--blur-amount: ${blurAmount};`}
  />
</div>

<style>
  .icon-with-blur-effect {
    stroke: #ff5353;
    stroke-width: 1;
    opacity: 0;
    filter: blur(var(--blur-amount, 3px));
    transition: filter 0.3s ease;
  }
</style>

<script>
  // Este script se ejecutará una vez por componente
  document.addEventListener("astro:page-load", function () {
    const setupIconEffects = () => {
      // Seleccionar todos los iconos con efecto de blur
      const icons = document.querySelectorAll<HTMLImageElement>(".icon-with-blur-effect");
      
      icons.forEach(function (icon) {
        const bentoCell = icon.closest<HTMLElement>(".bento-cell");
        if (!bentoCell) return;

        // Configurar el icono para que sea invisible inicialmente
        icon.style.opacity = "0";

        // Función para actualizar la máscara del icono
        function updateMask(e: MouseEvent) {
          // Obtener las coordenadas del SVG para cálculos precisos
          const svgRect = icon.getBoundingClientRect();

          // Calcular la posición exacta del cursor relativa al SVG
          const svgX = e.clientX - svgRect.left;
          const svgY = e.clientY - svgRect.top;

          // Aplicar la máscara con el centro exactamente en la posición del cursor
          icon.style.opacity = "1";
          const maskImage = `radial-gradient(circle 50px at ${svgX}px ${svgY}px, black 0%, rgba(0,0,0,0.8) 40%, rgba(0,0,0,0.5) 60%, rgba(0,0,0,0.2) 80%, transparent 100%)`;
          icon.style.webkitMaskImage = maskImage;
          icon.style.maskImage = maskImage;
        }

        // Agregar eventos
        bentoCell.addEventListener("mousemove", updateMask);

        // Ocultar el icono cuando el cursor sale de la celda
        bentoCell.addEventListener("mouseleave", function () {
          icon.style.opacity = "0";
        });
      });
    };

    // Inicializar los efectos
    setupIconEffects();
  });
</script>