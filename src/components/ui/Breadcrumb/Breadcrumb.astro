---
import type { BreadcrumbItem } from "../../../types";

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<!-- Versi칩n desktop del breadcrumb -->
<nav id="breadcrumb" aria-label="Breadcrumb" class="fixed top-[72px] left-0 right-0 z-40 px-6 lg:px-8 h-[40px] hidden md:flex items-center m-0 bg-obscure transition-all duration-300 border-b border-transparent">
  <ol class="flex items-center space-x-2 text-sm">
    <li>
      <a href="/" class="text-gray-400 hover:text-white">Inicio</a>
    </li>
    {
      items.map((item, index) => (
        <li class="flex items-center">
          <span class="mx-2 text-gray-500">/</span>
          <a
            href={item.href}
            class={`${
              item.active ? "text-white font-medium" : "text-gray-400 hover:text-white"
            }`}
            aria-current={item.active ? "page" : undefined}
          >
            {item.label}
          </a>
        </li>
      ))
    }
  </ol>
</nav>

<!-- Versi칩n m칩vil del breadcrumb (se usar치 en Navigation.astro) -->
<div id="mobile-breadcrumb" class="md:hidden">
  <ol class="flex items-center space-x-1 text-xs">
    <li>
      <a href="/" class="text-gray-400 hover:text-white truncate max-w-[40px]">Inicio</a>
    </li>
    {
      items.map((item, index) => (
        <li class="flex items-center">
          <span class="mx-1 text-gray-500">/</span>
          <a
            href={item.href}
            class={`${
              item.active ? "text-white font-medium" : "text-gray-400 hover:text-white"
            } truncate max-w-[80px]`}
            aria-current={item.active ? "page" : undefined}
          >
            {item.label}
          </a>
        </li>
      ))
    }
  </ol>
</div>

<style>
  #breadcrumb.scrolled {
    border-color: rgba(255, 255, 255, 0.1);
  }
</style>

<script>
  // Solo aplicar efectos de scroll en desktop
  if (window.innerWidth >= 768) {
    const breadcrumb = document.getElementById('breadcrumb');
    
    const handleScroll = () => {
      if (window.scrollY > 0) {
        breadcrumb?.classList.add('scrolled');
      } else {
        breadcrumb?.classList.remove('scrolled');
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    
    // Verificar el estado inicial
    handleScroll();
  }
</script>
